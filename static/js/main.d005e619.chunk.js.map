{"version":3,"sources":["components/Feed.js","components/Videos.js","components/Events.js","components/GiphyGifs.js","App.js","reportWebVitals.js","index.js"],"names":["Feed","content","setContent","useState","loading","setLoading","error","setError","useEffect","async","rssResponse","axios","get","videoResponse","giphyResponse","filteredContent","data","filter","item","media","videoId","sort","Math","random","console","fetchData","_jsx","children","_jsxs","className","map","index","title","src","alt","width","height","concat","frameBorder","allow","allowFullScreen","description","href","link","Videos","videos","setVideos","response","fetchVideos","video","Events","events","setEvents","location","fetchEvents","event","name","logo","Date","start","toLocaleString","end","url","GiphyGifs","gifs","setGifs","fetchGifs","gif","App","Router","Link","to","Routes","Route","path","element","reportWebVitals","onPerfEntry","Function","then","_ref","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","createRoot","document","getElementById","render","React","StrictMode"],"mappings":"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","file":"static/js/main.d005e619.chunk.js","sourcesContent":["import React, { useEffect, useState } from 'react';\r\nimport axios from 'axios';\r\nimport './Feed.css';\r\n\r\nconst Feed = () => {\r\n    const [content, setContent] = useState([]);\r\n    const [loading, setLoading] = useState(true);\r\n    const [error, setError] = useState(null);\r\n\r\n    useEffect(() => {\r\n        const fetchData = async () => {\r\n            try {\r\n                const rssResponse = await axios.get('http://127.0.0.1:5000/api/rss_feeds');\r\n                const videoResponse = await axios.get('http://127.0.0.1:5000/api/youtube_videos');\r\n                const giphyResponse = await axios.get('http://127.0.0.1:5000/api/giphy_gifs');\r\n                const combinedContent = [\r\n                    ...rssResponse.data,\r\n                    ...videoResponse.data,\r\n                    ...giphyResponse.data,\r\n                ];\r\n\r\n                // Filter out content without a picture or video\r\n                const filteredContent = combinedContent.filter(item => item.media || item.videoId);\r\n\r\n                // Randomize the content\r\n                filteredContent.sort(() => Math.random() - 0.5);\r\n                setContent(filteredContent);\r\n                setLoading(false);\r\n            } catch (error) {\r\n                console.error('Error fetching content:', error);\r\n                setError(error);\r\n                setLoading(false);\r\n            }\r\n        };\r\n\r\n        fetchData();\r\n    }, []);\r\n\r\n    if (loading) return <p>Loading...</p>;\r\n    if (error) return <p>Error loading content. Please try again later.</p>;\r\n\r\n    return (\r\n        <div className=\"feed\">\r\n            <h1>Latest Feeds</h1>\r\n            <div className=\"feed-content\">\r\n                {content.map((item, index) => (\r\n                    <div key={index} className=\"feed-item\">\r\n                        <h2>{item.title}</h2>\r\n                        {item.media ? (\r\n                            <img src={item.media} alt={item.title} className=\"feed-image\" />\r\n                        ) : item.videoId ? (\r\n                            <iframe\r\n                                width=\"100%\"\r\n                                height=\"315\"\r\n                                src={`https://www.youtube.com/embed/${item.videoId}`}\r\n                                frameBorder=\"0\"\r\n                                allow=\"accelerometer; autoplay; clipboard-write; encrypted-media; gyroscope; picture-in-picture\"\r\n                                allowFullScreen\r\n                                title={item.title}\r\n                                className=\"feed-video\"\r\n                            ></iframe>\r\n                        ) : null}\r\n                        <p>{item.description}</p>\r\n                        <a href={item.link} className=\"read-more\">Read more</a>\r\n                    </div>\r\n                ))}\r\n            </div>\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default Feed;\r\n","import React, { useEffect, useState } from 'react';\r\nimport axios from 'axios';\r\n\r\nconst Videos = () => {\r\n    const [videos, setVideos] = useState([]);\r\n    const [loading, setLoading] = useState(true);\r\n    const [error, setError] = useState(null);\r\n\r\n    useEffect(() => {\r\n        const fetchVideos = async () => {\r\n            try {\r\n                const response = await axios.get('http://127.0.0.1:5000/api/youtube_videos');\r\n                setVideos(response.data);\r\n                setLoading(false);\r\n            } catch (error) {\r\n                console.error('Error fetching videos:', error);\r\n                setError(error);\r\n                setLoading(false);\r\n            }\r\n        };\r\n\r\n        fetchVideos();\r\n    }, []);\r\n\r\n    if (loading) return <p>Loading...</p>;\r\n    if (error) return <p>Error loading videos. Please try again later.</p>;\r\n\r\n    return (\r\n        <div>\r\n            <h1>Latest Videos</h1>\r\n            <ul>\r\n                {videos.map((video, index) => (\r\n                    <li key={index}>\r\n                        <iframe\r\n                            width=\"560\"\r\n                            height=\"315\"\r\n                            src={`https://www.youtube.com/embed/${video.videoId}`}\r\n                            frameBorder=\"0\"\r\n                            allow=\"accelerometer; autoplay; clipboard-write; encrypted-media; gyroscope; picture-in-picture\"\r\n                            allowFullScreen\r\n                            title={video.title}\r\n                        ></iframe>\r\n                        <h2>{video.title}</h2>\r\n                        <p>{video.description}</p>\r\n                    </li>\r\n                ))}\r\n            </ul>\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default Videos;\r\n","import React, { useEffect, useState } from 'react';\r\nimport axios from 'axios';\r\nimport './Events.css';\r\n\r\nconst Events = () => {\r\n    const [events, setEvents] = useState([]);\r\n    const [loading, setLoading] = useState(true);\r\n    const [error, setError] = useState(null);\r\n\r\n    useEffect(() => {\r\n        const fetchEvents = async () => {\r\n            try {\r\n                const location = 'Africa';  // This should be dynamic based on user location\r\n                const response = await axios.get(`http://127.0.0.1:5000/api/eventbrite_events?location=${location}`);\r\n                setEvents(response.data);\r\n                setLoading(false);\r\n            } catch (error) {\r\n                console.error('Error fetching events:', error);\r\n                setError(error);\r\n                setLoading(false);\r\n            }\r\n        };\r\n\r\n        fetchEvents();\r\n    }, []);\r\n\r\n    if (loading) return <p>Loading...</p>;\r\n    if (error) return <p>Error loading events. Please try again later.</p>;\r\n\r\n    return (\r\n        <div className=\"events\">\r\n            <h1>Upcoming Events</h1>\r\n            <div className=\"events-content\">\r\n                {events.map((event, index) => (\r\n                    <div key={index} className=\"event-item\">\r\n                        <h2>{event.name}</h2>\r\n                        <img src={event.logo} alt={event.name} className=\"event-image\" />\r\n                        <p>{event.description}</p>\r\n                        <p><strong>Start:</strong> {new Date(event.start).toLocaleString()}</p>\r\n                        <p><strong>End:</strong> {new Date(event.end).toLocaleString()}</p>\r\n                        <a href={event.url} className=\"read-more\">More Info</a>\r\n                    </div>\r\n                ))}\r\n            </div>\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default Events;\r\n","import React, { useEffect, useState } from 'react';\r\nimport axios from 'axios';\r\nimport './GiphyGifs.css';\r\n\r\nconst GiphyGifs = () => {\r\n    const [gifs, setGifs] = useState([]);\r\n    const [loading, setLoading] = useState(true);\r\n    const [error, setError] = useState(null);\r\n\r\n    useEffect(() => {\r\n        const fetchGifs = async () => {\r\n            try {\r\n                const response = await axios.get('http://127.0.0.1:5000/api/giphy_gifs');\r\n                setGifs(response.data);\r\n                setLoading(false);\r\n            } catch (error) {\r\n                console.error('Error fetching GIFs:', error);\r\n                setError(error);\r\n                setLoading(false);\r\n            }\r\n        };\r\n\r\n        fetchGifs();\r\n    }, []);\r\n\r\n    if (loading) return <p>Loading...</p>;\r\n    if (error) return <p>Error loading GIFs. Please try again later.</p>;\r\n\r\n    return (\r\n        <div className=\"borders\">\r\n            <div className=\"border left\">\r\n                {gifs.map((gif, index) => (\r\n                    <img key={index} src={gif.url} alt={gif.title} />\r\n                ))}\r\n            </div>\r\n            <div className=\"border right\">\r\n                {gifs.map((gif, index) => (\r\n                    <img key={index} src={gif.url} alt={gif.title} />\r\n                ))}\r\n            </div>\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default GiphyGifs;\r\n","import React from 'react';\r\nimport { BrowserRouter as Router, Routes, Route, Link } from 'react-router-dom';\r\nimport Feed from './components/Feed';\r\nimport Videos from './components/Videos';\r\nimport Events from './components/Events';\r\nimport GiphyGifs from './components/GiphyGifs';\r\nimport './App.css';\r\n\r\nfunction App() {\r\n    return (\r\n        <Router>\r\n            <div className=\"App\">\r\n                <GiphyGifs />\r\n                <div className=\"content-wrapper\">\r\n                    <nav>\r\n                        <ul>\r\n                            <li><Link to=\"/\">Feed</Link></li>\r\n                            <li><Link to=\"/videos\">Videos</Link></li>\r\n                            <li><Link to=\"/events\">Events</Link></li>\r\n                        </ul>\r\n                    </nav>\r\n                    <div className=\"content\">\r\n                        <Routes>\r\n                            <Route path=\"/\" element={<Feed />} />\r\n                            <Route path=\"/videos\" element={<Videos />} />\r\n                            <Route path=\"/events\" element={<Events />} />\r\n                        </Routes>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        </Router>\r\n    );\r\n}\r\n\r\nexport default App;\r\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\r\nimport ReactDOM from 'react-dom/client';\r\nimport './index.css';\r\nimport App from './App';\r\nimport reportWebVitals from './reportWebVitals';\r\n\r\nconst root = ReactDOM.createRoot(document.getElementById('root'));\r\nroot.render(\r\n  <React.StrictMode>\r\n    <App />\r\n  </React.StrictMode>\r\n);\r\n\r\nreportWebVitals();\r\n"],"sourceRoot":""}